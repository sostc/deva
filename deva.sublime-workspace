{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"sta",
				"started"
			],
			[
				"stat",
				"state"
			],
			[
				"_s",
				"_scheduler"
			],
			[
				"ti",
				"timer"
			],
			[
				"c",
				"create_cps\tfunction"
			]
		]
	},
	"buffers":
	[
		{
			"file": "deva/browser.py",
			"settings":
			{
				"buffer_size": 16845,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					11,
					1,
					"revert",
					null,
					"",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAADrAgAAAAAAAOsCAAAAAAAAAAAAAAAA8L8"
				],
				[
					14,
					1,
					"revert",
					null,
					"",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAuAwAAAAAAAC4DAAAAAAAAAAAAAAAA8L8"
				],
				[
					17,
					1,
					"revert",
					null,
					"",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAACEAgAAAAAAAIQCAAAAAAAAAAAAAAAA8L8"
				],
				[
					1,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEsAAAAAAAAASwAAAAAAAAAAAAAAAADwvw"
				],
				[
					2,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAEsAAAAAAAAASwAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "deva/page.py",
			"settings":
			{
				"buffer_size": 17308,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					1,
					1,
					"revert",
					null,
					"",
					"BAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					1,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					2,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				],
				[
					3,
					1,
					"revert",
					null,
					"",
					"AwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvw"
				]
			]
		},
		{
			"file": "deva/monitor.py",
			"settings":
			{
				"buffer_size": 10008,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/opt/homebrew/lib/python3.13/site-packages/huggingface_hub/file_download.py",
			"settings":
			{
				"buffer_size": 70254,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/Python 3/Python3.sublime-build",
					""
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				]
			],
			[
				"Packages/Python 3/Python3.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"sspy3",
				"Set Syntax: Python3"
			],
			[
				"sspy",
				"Set Syntax: Python"
			],
			[
				"in",
				"Interrupt IPython Notebook Kernel"
			],
			[
				"pyth",
				"Set Syntax: Python3"
			],
			[
				"py",
				"Package Control: Add Repository"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 136.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/spark/pycharmproject/deva",
		"/Users/spark/pycharmproject/deva/deva",
		"/Users/spark/pycharmproject/deva/deva/utils"
	],
	"file_history":
	[
		"/Users/spark/pycharmproject/deva/deva.sublime-workspace",
		"/usr/local/bin/ninja",
		"/Users/spark/pycharmproject/deva/requirements.txt",
		"/Users/spark/pycharmproject/naja/news/xinhuashe.py",
		"/Users/spark/pycharmproject/deva/deva/utils/sqlitedict.py",
		"/Users/spark/pycharmproject/deva/deva/store.py",
		"/Users/spark/pycharmproject/naja/test.py",
		"/Users/spark/pycharmproject/secsay/dayou.py",
		"/usr/local/bin/xattr",
		"/Users/spark/pycharmproject/deva/deva/when.py",
		"/Users/spark/pycharmproject/deva/deva/core.py",
		"/Users/spark/tmp.txt",
		"/Users/spark/pycharmproject/naja/chatgpt_pywebio.py",
		"/Users/spark/pycharmproject/naja/pigprice.py",
		"/Users/spark/pycharmproject/deva/deva/endpoints.py",
		"/Users/spark/pycharmproject/secsay/j4096.py",
		"/Users/spark/.bashrc",
		"/Users/spark/自动操作/JupyterAutoStart.app/Contents/document.wflow",
		"/opt/homebrew/bin/jupyter-notebook",
		"/Users/spark/.jupyter/lab/user-settings/@jupyterlab/extensionmanager-extension/plugin.jupyterlab-settings",
		"/Users/spark/.pip/pip.conf",
		"/Users/spark/pship/hello-python/main.py",
		"/Users/spark/.jupyter/jupyter_notebook_config.py",
		"/opt/homebrew/bin/jupyter",
		"/usr/local/bin/thefuck",
		"/opt/homebrew/bin/pip",
		"/Users/spark/pycharmproject/secsay/zhouyi_api.py",
		"/Users/spark/pycharmproject/deva/.git/config",
		"/Users/spark/pycharmproject/deva/deva/compute.py",
		"/Users/spark/pycharmproject/deva/deva/topic.py",
		"/usr/local/lib/python3.10/site-packages/aioredis/__init__.py",
		"/Users/spark/pycharmproject/secsay/g64.py",
		"/Users/spark/pycharmproject/deva/deva/pipe.py",
		"/Users/spark/pycharmproject/naja/twitter/trump.py",
		"/Users/spark/pycharmproject/naja/twitter/twitter.py",
		"/Users/spark/pycharmproject/deva/deva/__init__.py",
		"/Users/spark/pycharmproject/deva/deva/page.py",
		"/Users/spark/pship/down_m3u8/index-f1-v1-a1.m3u8",
		"/Users/spark/.vim/bundle/vim-gsc/plugin/gsc.vim",
		"/Users/spark/.vimrc",
		"/Users/spark/pycharmproject/deva/deva/stream.py",
		"/Users/spark/pycharmproject/deva/.gitignore",
		"/Users/spark/pycharmproject/easyquant/.gitignore",
		"/private/etc/hosts",
		"/Users/spark/pycharmproject/easyquant/stock_2468/model.py",
		"/Users/spark/pship/snipte_test.py",
		"/Users/spark/pycharmproject/easyquant/stream_web_server.py",
		"/Users/spark/pycharmproject/easyquant/stock_2468/main.py",
		"/Users/spark/pycharmproject/deva/deva/streamz/core.py",
		"/Users/spark/pycharmproject/deva/deva/streamz/sources.py",
		"/usr/local/lib/python3.7/site-packages/tornado/process.py",
		"/Users/spark/Downloads/streamz-0.5.1/MANIFEST.in",
		"/Users/spark/Downloads/streamz-0.5.1/setup.cfg",
		"/Users/spark/pycharmproject/deva/setup.py",
		"/Users/spark/Downloads/streamz-0.5.1/requirements.txt",
		"/Users/spark/pycharmproject/deva/deva/search.py",
		"/Users/spark/pship/tmp.txt"
	],
	"find":
	{
		"height": 24.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"dis",
			"tables",
			"异常",
			"bug",
			"resa",
			"resample",
			"sample",
			"ME",
			"me",
			"sink",
			"nbextensions",
			"nbex",
			"Thread",
			"cache",
			"_rule_re",
			"is_werkzeug_route",
			"_rule_re",
			"timer",
			"islice",
			"head",
			"detail",
			"SyntasticStatuslineFlag",
			"tagbar",
			"核桃",
			"大畜",
			"pay",
			"九四"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"folders":
	[
		{
			"path": "/Users/spark/pycharmproject/deva"
		},
		{
			"path": "/Users/spark/pycharmproject/secsay"
		},
		{
			"path": "/Users/spark/pycharmproject/naja"
		}
	],
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "deva/browser.py",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16845,
						"regions":
						{
						},
						"selection":
						[
							[
								599,
								599
							]
						],
						"settings":
						{
							"is_init_dirty_state": false,
							"origin_encoding": "UTF-8",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "deva/page.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17308,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"is_init_dirty_state": false,
							"origin_encoding": "UTF-8",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "deva/monitor.py",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 10008,
						"regions":
						{
						},
						"selection":
						[
							[
								5613,
								5613
							]
						],
						"settings":
						{
							"is_init_dirty_state": false,
							"origin_encoding": "UTF-8",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/opt/homebrew/lib/python3.13/site-packages/huggingface_hub/file_download.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 70254,
						"regions":
						{
						},
						"selection":
						[
							[
								19891,
								19891
							]
						],
						"settings":
						{
							"is_init_dirty_state": false,
							"origin_encoding": "UTF-8",
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6655.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 36.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.SublimeLinter Messages":
	{
		"height": 108.0
	},
	"output.autopep8":
	{
		"height": 108.0
	},
	"output.exec":
	{
		"height": 108.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"re",
				"deva/requirements.txt"
			],
			[
				"core",
				"deva/deva/core.py"
			],
			[
				"xinhuashe",
				"naja/news/xinhuashe.py"
			],
			[
				"pig",
				"naja/pigprice.py"
			],
			[
				"chat",
				"naja/chatgpt_pywebio.py"
			],
			[
				"dayou",
				"secsay/dayou.py"
			],
			[
				"stre",
				"deva/stream.py"
			],
			[
				"str",
				"deva/stream.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/pycharmproject/deva/deva.sublime-workspace"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
